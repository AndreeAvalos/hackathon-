// <auto-generated />
using System;
using ApiRest.Database.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ApiRest.Migrations
{
    [DbContext(typeof(CustomContext))]
    [Migration("20230402005049_Catalogs")]
    partial class Catalogs
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ApiRest.Entities.Catalogs.DerivativeCatalogEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean")
                        .HasColumnName("active");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("derivative_catalog");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Active = true,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Unidad para hojas",
                            Name = "hoja"
                        },
                        new
                        {
                            Id = -2,
                            Active = true,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Unidad para galones",
                            Name = "galon"
                        },
                        new
                        {
                            Id = -3,
                            Active = true,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Unidad para litros",
                            Name = "litro"
                        },
                        new
                        {
                            Id = -4,
                            Active = true,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Unidad para metros",
                            Name = "metro"
                        });
                });

            modelBuilder.Entity("ApiRest.Entities.Catalogs.EnergyCatalogEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean")
                        .HasColumnName("active");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("energy_catalog");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Active = true,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Consumo administrativo",
                            Name = "administrativo"
                        },
                        new
                        {
                            Id = -2,
                            Active = true,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Consumo logistico",
                            Name = "logistico"
                        },
                        new
                        {
                            Id = -3,
                            Active = true,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Consumo de distribucion",
                            Name = "distribucion"
                        });
                });

            modelBuilder.Entity("ApiRest.Entities.Catalogs.EnergyTypeCatalogEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean")
                        .HasColumnName("active");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("energy_type_catalog");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Active = true,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Energia consumida por la envasadora",
                            Name = "envasado"
                        },
                        new
                        {
                            Id = -2,
                            Active = true,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Energia consumida por oficicnas administrativas",
                            Name = "oficinas administrativas"
                        },
                        new
                        {
                            Id = -3,
                            Active = true,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Energia consumida por otros",
                            Name = "etc"
                        });
                });

            modelBuilder.Entity("ApiRest.Entities.Catalogs.FuelCatalogEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean")
                        .HasColumnName("active");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("fuel_catalog");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Active = true,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Combustible administrativo",
                            Name = "administrativo"
                        },
                        new
                        {
                            Id = -2,
                            Active = true,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Combustible indirecto de proveedor",
                            Name = "indirect"
                        },
                        new
                        {
                            Id = -3,
                            Active = true,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Combustible de logistica",
                            Name = "distribucion"
                        });
                });

            modelBuilder.Entity("ApiRest.Entities.Catalogs.IssuanceCatalogEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean")
                        .HasColumnName("active");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("issuance_catalog");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Active = true,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ssociadas a las actividades de la organización y que están controladas por dicha organización",
                            Name = "directas"
                        },
                        new
                        {
                            Id = -2,
                            Active = true,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Asociadas al consumo energético adquirido y consumido por la organización.",
                            Name = "indirectas"
                        },
                        new
                        {
                            Id = -3,
                            Active = true,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Asociadas a otras actividades no controladas por la organización",
                            Name = "otras"
                        });
                });

            modelBuilder.Entity("ApiRest.Entities.Catalogs.PetroleumCatalogEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean")
                        .HasColumnName("active");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("petroleum_catalog");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Active = true,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Consumo administrativo",
                            Name = "administrativo"
                        },
                        new
                        {
                            Id = -2,
                            Active = true,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Consumo logistico",
                            Name = "logistico"
                        },
                        new
                        {
                            Id = -3,
                            Active = true,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Consumo de operacion",
                            Name = "distribucion"
                        });
                });

            modelBuilder.Entity("ApiRest.Entities.Catalogs.TravelCatalogEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean")
                        .HasColumnName("active");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("travel_catalog");

                    b.HasComment("Kind of travel");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Active = true,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "CEO y COO",
                            Name = "Alto Mando"
                        },
                        new
                        {
                            Id = -2,
                            Active = true,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Equipo de ventas",
                            Name = "Ventas"
                        },
                        new
                        {
                            Id = -3,
                            Active = true,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Equipo de tecnologia",
                            Name = "IT"
                        });
                });

            modelBuilder.Entity("ApiRest.Entities.EnergyConsumptionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean")
                        .HasColumnName("active");

                    b.Property<DateTime>("ConsumptionDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("consumption_date");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<int>("EnergyCatalogId")
                        .HasColumnType("integer")
                        .HasColumnName("energy_catalog_id");

                    b.Property<int>("EnergyTypeCatalogId")
                        .HasColumnType("integer")
                        .HasColumnName("energy_type_catalog_id");

                    b.Property<int>("IssuanceCatalogId")
                        .HasColumnType("integer")
                        .HasColumnName("issuance_catalog_id");

                    b.Property<double>("Units")
                        .HasColumnType("double precision")
                        .HasColumnName("units")
                        .HasComment("Number of unit per use");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("EnergyCatalogId");

                    b.HasIndex("EnergyTypeCatalogId");

                    b.HasIndex("IssuanceCatalogId");

                    b.ToTable("energy_consumption");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EnergyCatalogId = -2,
                            EnergyTypeCatalogId = -1,
                            IssuanceCatalogId = -1,
                            Units = 300.0
                        },
                        new
                        {
                            Id = -2,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EnergyCatalogId = -2,
                            EnergyTypeCatalogId = -1,
                            IssuanceCatalogId = -1,
                            Units = 300.0
                        },
                        new
                        {
                            Id = -3,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EnergyCatalogId = -2,
                            EnergyTypeCatalogId = -1,
                            IssuanceCatalogId = -1,
                            Units = 300.0
                        },
                        new
                        {
                            Id = -4,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EnergyCatalogId = -2,
                            EnergyTypeCatalogId = -2,
                            IssuanceCatalogId = -2,
                            Units = 900.0
                        },
                        new
                        {
                            Id = -5,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EnergyCatalogId = -2,
                            EnergyTypeCatalogId = -2,
                            IssuanceCatalogId = -2,
                            Units = 900.0
                        },
                        new
                        {
                            Id = -6,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EnergyCatalogId = -2,
                            EnergyTypeCatalogId = -2,
                            IssuanceCatalogId = -2,
                            Units = 900.0
                        },
                        new
                        {
                            Id = -7,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EnergyCatalogId = -2,
                            EnergyTypeCatalogId = -1,
                            IssuanceCatalogId = -2,
                            Units = 777.0
                        },
                        new
                        {
                            Id = -8,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EnergyCatalogId = -2,
                            EnergyTypeCatalogId = -3,
                            IssuanceCatalogId = -2,
                            Units = 777.0
                        },
                        new
                        {
                            Id = -9,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EnergyCatalogId = -2,
                            EnergyTypeCatalogId = -3,
                            IssuanceCatalogId = -3,
                            Units = 777.0
                        },
                        new
                        {
                            Id = -10,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EnergyCatalogId = -2,
                            EnergyTypeCatalogId = -3,
                            IssuanceCatalogId = -2,
                            Units = 777.0
                        },
                        new
                        {
                            Id = -11,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EnergyCatalogId = -3,
                            EnergyTypeCatalogId = -2,
                            IssuanceCatalogId = -1,
                            Units = 777.0
                        },
                        new
                        {
                            Id = -12,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EnergyCatalogId = -2,
                            EnergyTypeCatalogId = -1,
                            IssuanceCatalogId = -3,
                            Units = 777.0
                        },
                        new
                        {
                            Id = -13,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EnergyCatalogId = -2,
                            EnergyTypeCatalogId = -2,
                            IssuanceCatalogId = -1,
                            Units = 777.0
                        },
                        new
                        {
                            Id = -14,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EnergyCatalogId = -2,
                            EnergyTypeCatalogId = -3,
                            IssuanceCatalogId = -2,
                            Units = 777.0
                        },
                        new
                        {
                            Id = -15,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EnergyCatalogId = -3,
                            EnergyTypeCatalogId = -2,
                            IssuanceCatalogId = -3,
                            Units = 777.0
                        });
                });

            modelBuilder.Entity("ApiRest.Entities.FuelConsumptionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean")
                        .HasColumnName("active");

                    b.Property<DateTime>("ConsumptionDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("consumption_date");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<int>("FuelCatalogId")
                        .HasColumnType("integer")
                        .HasColumnName("fuel_catalog_id");

                    b.Property<int>("IssuanceCatalogId")
                        .HasColumnType("integer")
                        .HasColumnName("issuance_catalog_id");

                    b.Property<double>("Units")
                        .HasColumnType("double precision")
                        .HasColumnName("units")
                        .HasComment("Number of unit per use");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("FuelCatalogId");

                    b.HasIndex("IssuanceCatalogId");

                    b.ToTable("fuel_consumption");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FuelCatalogId = -1,
                            IssuanceCatalogId = -1,
                            Units = 500.0
                        },
                        new
                        {
                            Id = -2,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FuelCatalogId = -1,
                            IssuanceCatalogId = -1,
                            Units = 250.0
                        },
                        new
                        {
                            Id = -3,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FuelCatalogId = -1,
                            IssuanceCatalogId = -1,
                            Units = 500.0
                        },
                        new
                        {
                            Id = -4,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FuelCatalogId = -1,
                            IssuanceCatalogId = -1,
                            Units = 250.0
                        },
                        new
                        {
                            Id = -5,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FuelCatalogId = -1,
                            IssuanceCatalogId = -1,
                            Units = 500.0
                        },
                        new
                        {
                            Id = -6,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FuelCatalogId = -1,
                            IssuanceCatalogId = -1,
                            Units = 250.0
                        },
                        new
                        {
                            Id = -7,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FuelCatalogId = -1,
                            IssuanceCatalogId = -3,
                            Units = 1000.0
                        },
                        new
                        {
                            Id = -8,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FuelCatalogId = -1,
                            IssuanceCatalogId = -3,
                            Units = 250.0
                        },
                        new
                        {
                            Id = -9,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FuelCatalogId = -1,
                            IssuanceCatalogId = -3,
                            Units = 1000.0
                        },
                        new
                        {
                            Id = -10,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FuelCatalogId = -1,
                            IssuanceCatalogId = -3,
                            Units = 250.0
                        },
                        new
                        {
                            Id = -11,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FuelCatalogId = -1,
                            IssuanceCatalogId = -3,
                            Units = 1000.0
                        },
                        new
                        {
                            Id = -12,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FuelCatalogId = -1,
                            IssuanceCatalogId = -3,
                            Units = 250.0
                        },
                        new
                        {
                            Id = -13,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FuelCatalogId = -1,
                            IssuanceCatalogId = -2,
                            Units = 250.0
                        },
                        new
                        {
                            Id = -14,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FuelCatalogId = -1,
                            IssuanceCatalogId = -2,
                            Units = 250.0
                        },
                        new
                        {
                            Id = -15,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FuelCatalogId = -1,
                            IssuanceCatalogId = -2,
                            Units = 250.0
                        },
                        new
                        {
                            Id = -16,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FuelCatalogId = -1,
                            IssuanceCatalogId = -2,
                            Units = 250.0
                        },
                        new
                        {
                            Id = -17,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FuelCatalogId = -1,
                            IssuanceCatalogId = -2,
                            Units = 250.0
                        },
                        new
                        {
                            Id = -18,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FuelCatalogId = -1,
                            IssuanceCatalogId = -2,
                            Units = 250.0
                        },
                        new
                        {
                            Id = -19,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FuelCatalogId = -1,
                            IssuanceCatalogId = -2,
                            Units = 250.0
                        },
                        new
                        {
                            Id = -20,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FuelCatalogId = -2,
                            IssuanceCatalogId = -3,
                            Units = 666.0
                        },
                        new
                        {
                            Id = -21,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FuelCatalogId = -1,
                            IssuanceCatalogId = -2,
                            Units = 667.0
                        },
                        new
                        {
                            Id = -22,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FuelCatalogId = -1,
                            IssuanceCatalogId = -1,
                            Units = 68.0
                        },
                        new
                        {
                            Id = -23,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FuelCatalogId = -3,
                            IssuanceCatalogId = -3,
                            Units = 6699.0
                        },
                        new
                        {
                            Id = -24,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FuelCatalogId = -3,
                            IssuanceCatalogId = -2,
                            Units = 6665.0
                        },
                        new
                        {
                            Id = -25,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FuelCatalogId = -2,
                            IssuanceCatalogId = -2,
                            Units = 664.0
                        },
                        new
                        {
                            Id = -26,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FuelCatalogId = -1,
                            IssuanceCatalogId = -1,
                            Units = 623.0
                        },
                        new
                        {
                            Id = -27,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FuelCatalogId = -3,
                            IssuanceCatalogId = -3,
                            Units = 22.0
                        },
                        new
                        {
                            Id = -28,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FuelCatalogId = -2,
                            IssuanceCatalogId = -3,
                            Units = 444.0
                        });
                });

            modelBuilder.Entity("ApiRest.Entities.PetroleumConsumptionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean")
                        .HasColumnName("active");

                    b.Property<DateTime>("ConsumptionDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("consumption_date");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<int>("DerivativeCatalogId")
                        .HasColumnType("integer")
                        .HasColumnName("derivative_catalog_id");

                    b.Property<int>("IssuanceCatalogId")
                        .HasColumnType("integer")
                        .HasColumnName("issuance_catalog_id");

                    b.Property<int>("PetroleumCatalogId")
                        .HasColumnType("integer")
                        .HasColumnName("petroleum_catalog_id");

                    b.Property<double>("Units")
                        .HasColumnType("double precision")
                        .HasColumnName("units")
                        .HasComment("Number of unit per use");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("DerivativeCatalogId");

                    b.HasIndex("IssuanceCatalogId");

                    b.HasIndex("PetroleumCatalogId");

                    b.ToTable("petroleum_consumption");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DerivativeCatalogId = -1,
                            IssuanceCatalogId = -1,
                            PetroleumCatalogId = -1,
                            Units = 300.0
                        },
                        new
                        {
                            Id = -2,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DerivativeCatalogId = -1,
                            IssuanceCatalogId = -1,
                            PetroleumCatalogId = -1,
                            Units = 300.0
                        },
                        new
                        {
                            Id = -3,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DerivativeCatalogId = -1,
                            IssuanceCatalogId = -1,
                            PetroleumCatalogId = -1,
                            Units = 300.0
                        },
                        new
                        {
                            Id = -4,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DerivativeCatalogId = -1,
                            IssuanceCatalogId = -1,
                            PetroleumCatalogId = -1,
                            Units = 300.0
                        },
                        new
                        {
                            Id = -5,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DerivativeCatalogId = -1,
                            IssuanceCatalogId = -1,
                            PetroleumCatalogId = -1,
                            Units = 300.0
                        },
                        new
                        {
                            Id = -6,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DerivativeCatalogId = -1,
                            IssuanceCatalogId = -1,
                            PetroleumCatalogId = -1,
                            Units = 300.0
                        },
                        new
                        {
                            Id = -7,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DerivativeCatalogId = -1,
                            IssuanceCatalogId = -1,
                            PetroleumCatalogId = -1,
                            Units = 300.0
                        },
                        new
                        {
                            Id = -8,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DerivativeCatalogId = -1,
                            IssuanceCatalogId = -1,
                            PetroleumCatalogId = -1,
                            Units = 300.0
                        },
                        new
                        {
                            Id = -9,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DerivativeCatalogId = -1,
                            IssuanceCatalogId = -1,
                            PetroleumCatalogId = -1,
                            Units = 300.0
                        },
                        new
                        {
                            Id = -10,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DerivativeCatalogId = -1,
                            IssuanceCatalogId = -1,
                            PetroleumCatalogId = -1,
                            Units = 300.0
                        },
                        new
                        {
                            Id = -11,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 1, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DerivativeCatalogId = -1,
                            IssuanceCatalogId = -1,
                            PetroleumCatalogId = -1,
                            Units = 300.0
                        },
                        new
                        {
                            Id = -12,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DerivativeCatalogId = -1,
                            IssuanceCatalogId = -1,
                            PetroleumCatalogId = -1,
                            Units = 300.0
                        },
                        new
                        {
                            Id = -13,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 1, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DerivativeCatalogId = -1,
                            IssuanceCatalogId = -1,
                            PetroleumCatalogId = -1,
                            Units = 300.0
                        },
                        new
                        {
                            Id = -14,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DerivativeCatalogId = -1,
                            IssuanceCatalogId = -1,
                            PetroleumCatalogId = -1,
                            Units = 300.0
                        },
                        new
                        {
                            Id = -15,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DerivativeCatalogId = -1,
                            IssuanceCatalogId = -1,
                            PetroleumCatalogId = -1,
                            Units = 300.0
                        },
                        new
                        {
                            Id = -16,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DerivativeCatalogId = -1,
                            IssuanceCatalogId = -1,
                            PetroleumCatalogId = -1,
                            Units = 300.0
                        },
                        new
                        {
                            Id = -17,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DerivativeCatalogId = -1,
                            IssuanceCatalogId = -1,
                            PetroleumCatalogId = -1,
                            Units = 300.0
                        },
                        new
                        {
                            Id = -18,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DerivativeCatalogId = -1,
                            IssuanceCatalogId = -1,
                            PetroleumCatalogId = -1,
                            Units = 300.0
                        },
                        new
                        {
                            Id = -19,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 1, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DerivativeCatalogId = -1,
                            IssuanceCatalogId = -1,
                            PetroleumCatalogId = -1,
                            Units = 300.0
                        },
                        new
                        {
                            Id = -20,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DerivativeCatalogId = -1,
                            IssuanceCatalogId = -1,
                            PetroleumCatalogId = -1,
                            Units = 300.0
                        },
                        new
                        {
                            Id = -21,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DerivativeCatalogId = -1,
                            IssuanceCatalogId = -1,
                            PetroleumCatalogId = -1,
                            Units = 300.0
                        },
                        new
                        {
                            Id = -22,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 1, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DerivativeCatalogId = -1,
                            IssuanceCatalogId = -1,
                            PetroleumCatalogId = -1,
                            Units = 300.0
                        },
                        new
                        {
                            Id = -23,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DerivativeCatalogId = -1,
                            IssuanceCatalogId = -1,
                            PetroleumCatalogId = -1,
                            Units = 6600.0
                        },
                        new
                        {
                            Id = -24,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DerivativeCatalogId = -1,
                            IssuanceCatalogId = -1,
                            PetroleumCatalogId = -1,
                            Units = 6600.0
                        },
                        new
                        {
                            Id = -25,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DerivativeCatalogId = -1,
                            IssuanceCatalogId = -1,
                            PetroleumCatalogId = -1,
                            Units = 6600.0
                        },
                        new
                        {
                            Id = -26,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DerivativeCatalogId = -2,
                            IssuanceCatalogId = -3,
                            PetroleumCatalogId = -1,
                            Units = 3.0
                        },
                        new
                        {
                            Id = -27,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DerivativeCatalogId = -2,
                            IssuanceCatalogId = -3,
                            PetroleumCatalogId = -1,
                            Units = 3.0
                        },
                        new
                        {
                            Id = -28,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DerivativeCatalogId = -2,
                            IssuanceCatalogId = -3,
                            PetroleumCatalogId = -1,
                            Units = 3.0
                        },
                        new
                        {
                            Id = -29,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DerivativeCatalogId = -2,
                            IssuanceCatalogId = -3,
                            PetroleumCatalogId = -1,
                            Units = 22.0
                        },
                        new
                        {
                            Id = -30,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DerivativeCatalogId = -2,
                            IssuanceCatalogId = -3,
                            PetroleumCatalogId = -1,
                            Units = 22.0
                        },
                        new
                        {
                            Id = -31,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DerivativeCatalogId = -2,
                            IssuanceCatalogId = -3,
                            PetroleumCatalogId = -1,
                            Units = 22.0
                        },
                        new
                        {
                            Id = -32,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DerivativeCatalogId = -1,
                            IssuanceCatalogId = -1,
                            PetroleumCatalogId = -2,
                            Units = 42.0
                        },
                        new
                        {
                            Id = -33,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DerivativeCatalogId = -2,
                            IssuanceCatalogId = -1,
                            PetroleumCatalogId = -3,
                            Units = 42.0
                        },
                        new
                        {
                            Id = -34,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DerivativeCatalogId = -3,
                            IssuanceCatalogId = -1,
                            PetroleumCatalogId = -2,
                            Units = 42.0
                        },
                        new
                        {
                            Id = -35,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DerivativeCatalogId = -1,
                            IssuanceCatalogId = -2,
                            PetroleumCatalogId = -1,
                            Units = 42.0
                        },
                        new
                        {
                            Id = -36,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DerivativeCatalogId = -2,
                            IssuanceCatalogId = -2,
                            PetroleumCatalogId = -3,
                            Units = 42.0
                        },
                        new
                        {
                            Id = -37,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DerivativeCatalogId = -3,
                            IssuanceCatalogId = -2,
                            PetroleumCatalogId = -1,
                            Units = 42.0
                        },
                        new
                        {
                            Id = -38,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DerivativeCatalogId = -1,
                            IssuanceCatalogId = -3,
                            PetroleumCatalogId = -2,
                            Units = 42.0
                        },
                        new
                        {
                            Id = -39,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DerivativeCatalogId = -2,
                            IssuanceCatalogId = -3,
                            PetroleumCatalogId = -3,
                            Units = 42.0
                        },
                        new
                        {
                            Id = -40,
                            Active = true,
                            ConsumptionDate = new DateTime(2023, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DerivativeCatalogId = -3,
                            IssuanceCatalogId = -3,
                            PetroleumCatalogId = -1,
                            Units = 42.0
                        });
                });

            modelBuilder.Entity("ApiRest.Entities.TravelEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean")
                        .HasColumnName("active");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("destination");

                    b.Property<int>("IssuanceCatalogId")
                        .HasColumnType("integer")
                        .HasColumnName("issuance_catalog_id");

                    b.Property<int>("TravelCatalogId")
                        .HasColumnType("integer")
                        .HasColumnName("travel_catalog_id");

                    b.Property<DateTime>("TravelDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("travel_date");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("IssuanceCatalogId");

                    b.HasIndex("TravelCatalogId");

                    b.ToTable("travel");

                    b.HasComment("Number of travels");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Active = true,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Destination = "El Salvador",
                            IssuanceCatalogId = -1,
                            TravelCatalogId = -1,
                            TravelDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = -2,
                            Active = true,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Destination = "Panama",
                            IssuanceCatalogId = -1,
                            TravelCatalogId = -1,
                            TravelDate = new DateTime(2023, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = -3,
                            Active = true,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Destination = "Guatemala",
                            IssuanceCatalogId = -1,
                            TravelCatalogId = -1,
                            TravelDate = new DateTime(2023, 1, 23, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = -4,
                            Active = true,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Destination = "El Salvador",
                            IssuanceCatalogId = -1,
                            TravelCatalogId = -2,
                            TravelDate = new DateTime(2023, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = -5,
                            Active = true,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Destination = "Panama",
                            IssuanceCatalogId = -1,
                            TravelCatalogId = -2,
                            TravelDate = new DateTime(2023, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = -6,
                            Active = true,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Destination = "Guatemala",
                            IssuanceCatalogId = -1,
                            TravelCatalogId = -2,
                            TravelDate = new DateTime(2023, 2, 23, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = -7,
                            Active = true,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Destination = "El Salvador",
                            IssuanceCatalogId = -1,
                            TravelCatalogId = -1,
                            TravelDate = new DateTime(2023, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = -8,
                            Active = true,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Destination = "Panama",
                            IssuanceCatalogId = -1,
                            TravelCatalogId = -1,
                            TravelDate = new DateTime(2023, 3, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = -9,
                            Active = true,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Destination = "Guatemala",
                            IssuanceCatalogId = -1,
                            TravelCatalogId = -2,
                            TravelDate = new DateTime(2023, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = -10,
                            Active = true,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Destination = "El Salvador",
                            IssuanceCatalogId = -1,
                            TravelCatalogId = -3,
                            TravelDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = -11,
                            Active = true,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Destination = "Panama",
                            IssuanceCatalogId = -1,
                            TravelCatalogId = -2,
                            TravelDate = new DateTime(2023, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = -12,
                            Active = true,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Destination = "Guatemala",
                            IssuanceCatalogId = -1,
                            TravelCatalogId = -2,
                            TravelDate = new DateTime(2023, 1, 23, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = -13,
                            Active = true,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Destination = "El Salvador",
                            IssuanceCatalogId = -1,
                            TravelCatalogId = -1,
                            TravelDate = new DateTime(2023, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = -14,
                            Active = true,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Destination = "Panama",
                            IssuanceCatalogId = -1,
                            TravelCatalogId = -1,
                            TravelDate = new DateTime(2023, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = -15,
                            Active = true,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Destination = "Guatemala",
                            IssuanceCatalogId = -1,
                            TravelCatalogId = -1,
                            TravelDate = new DateTime(2023, 2, 23, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = -16,
                            Active = true,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Destination = "El Salvador",
                            IssuanceCatalogId = -1,
                            TravelCatalogId = -1,
                            TravelDate = new DateTime(2023, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = -17,
                            Active = true,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Destination = "Panama",
                            IssuanceCatalogId = -1,
                            TravelCatalogId = -2,
                            TravelDate = new DateTime(2023, 3, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = -18,
                            Active = true,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Destination = "Guatemala",
                            IssuanceCatalogId = -1,
                            TravelCatalogId = -3,
                            TravelDate = new DateTime(2023, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ApiRest.Entities.EnergyConsumptionEntity", b =>
                {
                    b.HasOne("ApiRest.Entities.Catalogs.EnergyCatalogEntity", "EnergyCatalog")
                        .WithMany()
                        .HasForeignKey("EnergyCatalogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiRest.Entities.Catalogs.EnergyTypeCatalogEntity", "EnergyTypeCatalog")
                        .WithMany()
                        .HasForeignKey("EnergyTypeCatalogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiRest.Entities.Catalogs.IssuanceCatalogEntity", "IssuanceCatalog")
                        .WithMany()
                        .HasForeignKey("IssuanceCatalogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EnergyCatalog");

                    b.Navigation("EnergyTypeCatalog");

                    b.Navigation("IssuanceCatalog");
                });

            modelBuilder.Entity("ApiRest.Entities.FuelConsumptionEntity", b =>
                {
                    b.HasOne("ApiRest.Entities.Catalogs.FuelCatalogEntity", "FuelCatalog")
                        .WithMany()
                        .HasForeignKey("FuelCatalogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiRest.Entities.Catalogs.IssuanceCatalogEntity", "IssuanceCatalog")
                        .WithMany()
                        .HasForeignKey("IssuanceCatalogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FuelCatalog");

                    b.Navigation("IssuanceCatalog");
                });

            modelBuilder.Entity("ApiRest.Entities.PetroleumConsumptionEntity", b =>
                {
                    b.HasOne("ApiRest.Entities.Catalogs.DerivativeCatalogEntity", "DerivativeCatalog")
                        .WithMany()
                        .HasForeignKey("DerivativeCatalogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiRest.Entities.Catalogs.IssuanceCatalogEntity", "IssuanceCatalog")
                        .WithMany()
                        .HasForeignKey("IssuanceCatalogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiRest.Entities.Catalogs.PetroleumCatalogEntity", "PetroleumCatalog")
                        .WithMany()
                        .HasForeignKey("PetroleumCatalogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DerivativeCatalog");

                    b.Navigation("IssuanceCatalog");

                    b.Navigation("PetroleumCatalog");
                });

            modelBuilder.Entity("ApiRest.Entities.TravelEntity", b =>
                {
                    b.HasOne("ApiRest.Entities.Catalogs.IssuanceCatalogEntity", "IssuanceCatalog")
                        .WithMany()
                        .HasForeignKey("IssuanceCatalogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiRest.Entities.Catalogs.TravelCatalogEntity", "TravelCatalog")
                        .WithMany()
                        .HasForeignKey("TravelCatalogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IssuanceCatalog");

                    b.Navigation("TravelCatalog");
                });
#pragma warning restore 612, 618
        }
    }
}
